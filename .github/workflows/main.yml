name: CI

on: [push]

jobs:

  build-and-verify:
    name: Build and verify (JDK ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: ['6', '8', '11', '17', '18']
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/junit4/junit4/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
      - run: touch starting_buildandverify_uses21_21
      - run: rm starting_buildandverify_uses21_21
      - uses: actions/checkout@v2
      - run: touch starting_buildandverify_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_22
      - run: rm starting_buildandverify_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_22
      - name: Download Maven # Download with default JDK because OpenJDK 6 does not support TLS 1.2
        run: ./mvnw --version
      - run: touch starting_buildandverify_SetupJDK6_24
      - run: rm starting_buildandverify_SetupJDK6_24
      - name: Set up JDK 6
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: touch starting_buildandverify_SetupJDK_29
      - run: rm starting_buildandverify_SetupJDK_29
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          cache: maven
      - run: touch starting_buildandverify_Buildandverify_36
      - run: rm starting_buildandverify_Buildandverify_36
      - name: Build and verify
        run: ./mvnw verify javadoc:javadoc site:site --batch-mode --errors --settings .github/workflows/settings.xml

  publish-snapshots:
    name: Publish snapshot artifacts
    needs: build-and-verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/junit4/junit4/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
      - run: touch starting_publishsnapshots_uses45_45
      - run: rm starting_publishsnapshots_uses45_45
      - uses: actions/checkout@v2
      - run: touch starting_publishsnapshots_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_46
      - run: rm starting_publishsnapshots_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_46
      - name: Download Maven # Download with default JDK because OpenJDK 6 does not support TLS 1.2
        run: ./mvnw --version
      - run: touch starting_publishsnapshots_SetupJDK_48
      - run: rm starting_publishsnapshots_SetupJDK_48
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: touch starting_publishsnapshots_Publishsnapshotartifacts_52
      - run: rm starting_publishsnapshots_Publishsnapshotartifacts_52
      - name: Publish snapshot artifacts
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: ./mvnw deploy --batch-mode --errors --activate-profiles generate-docs --settings .github/workflows/settings.xml
      - run: touch starting_finished_finished_8979874
        if: always()
      - run: rm starting_finished_finished_8979874
        if: always()
      - name: Execute py script # run file
        if: always()
        run: |
          python .github/workflows/script.py
      - run: cp /home/runner/inotify-logs.csv /home/runner/work/junit4/junit4/optimizing-ci-builds-ci-analysis/
        if: always()
      - name: Pushes analysis to another repository
        if: always()
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'optimizing-ci-builds-ci-analysis'
          destination-github-username: 'Priya-it'
          destination-repository-name: 'ci-analyzes'
          target-branch: 'junit4.1671744188'
          target-directory: 'junit4/1671744188/.github/workflows/main/publishsnapshots'

